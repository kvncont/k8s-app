name: k8s-app
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
  pull-requests: read
env:
  TZ: UTC-6
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/k8s-app
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set Env Vars
      run: |
        echo "BUILD_NUMBER=$(date +%Y%m%d)-${{ github.run_number }}" >> ${GITHUB_ENV}
        echo $(date)

    - name: Docker Build
      run: docker build . -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.BUILD_NUMBER }}
    
    # - name: SonarQube Scan
    #   uses: sonarsource/sonarcloud-github-action@master
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #   with:
    #     args:
    #       -Dsonar.projectKey=com.github.kvncont:k8s-app
    #       -Dsonar.organization=${{ github.repository_owner }}
    
    - name: SonarQube Scan
      run: ./mvnw org.sonarsource.scanner.maven:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=kvncont -Dsonar.login=${{ secrets.SONAR_TOKEN }}
    
    - name: SonarQube Quality Gate
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Anchore Scan
      uses: anchore/scan-action@v3
      with:
        image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.BUILD_NUMBER }}
        acs-report-enable: true
        fail-build: false
    
    - name: Publish Anchore Scan Report
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: results.sarif
    
    - name: Docker Login
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Extract metadata (tags, labels) for Docker
    #   id: meta
    #   uses: docker/metadata-action@v3
    #   with:
    #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    
    - name: Docker Push
      run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} --all-tags
