# This is a SecretProviderClass example using system-assigned identity to access your key vault
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: k8s-app-azure-kv-kvncontmicroservices-system-msi
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"    # Set to true for using managed identity
    userAssignedIdentityID: "8c990c16-b71b-4ddb-97f8-911fd909d982"      # If empty, then defaults to use the system assigned identity on the VM
    keyvaultName: kv-kvncontmicroservices
    cloudName: ""                   # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud
    objects:  |
      array:
        - |
          objectName: cosmos-kvncontmicroservices-user
          objectType: secret        # object types: secret, key, or cert
          objectVersion: ""         # [OPTIONAL] object versions, default to latest if empty
        - |
          objectName: cosmos-kvncontmicroservices-pass
          objectType: secret
          objectVersion: ""
    tenantId: 5e5589e1-c70e-41fb-9cf4-f199068b06b9
  secretObjects:                              # [OPTIONAL] SecretObjects defines the desired state of synced Kubernetes secret objects
  - secretName: k8s-app-secret                # name of the Kubernetes secret object
    data:
    - key: database-user                           # data field to populate
      objectName: cosmos-kvncontmicroservices-user # name of the mounted content to sync; this could be the object name or the object alias
    - key: database-pass                                # data field to populate
      objectName: cosmos-kvncontmicroservices-pass # name of the mounted content to sync; this could be the object name or the object alias
    type: Opaque                                 # type of Kubernetes secret object (for example, Opaque, kubernetes.io/tls)